<%-
local curdev = luci.dispatcher.context.requestpath
local has_titles = false
local i, k
local colspan = 1

for i, k in pairs(self.children) do
        if not has_titles and k.title and #k.title > 0 then
                has_titles = true
        end
end

local function generate_config(config, delimiter)
        write("{")
        for name, val in pairs(config) do
                if type(val) == "table" then
                        write(name .. ":")
                        generate_config(val, true)
                else
                        if type(val) == "boolean" then
                                val = val and "true" or "false"
                        end
                        write(name .. ":" .. "\"" ..val .."\",")
                end
        end
        if delimiter then write("},") else write("}") end
end

local function tableSort(a, b)
        return a.date > b.date
end

function get_events()
	local messages = {}
	DB_PATH = "/etc/mosquitto/messages.db"   
    local messages = {}	                                                                                                                
    local sqlite3 = require "lsqlite3"                                                                                                        
    local db = sqlite3.open(DB_PATH) or nil                                                                                                   
    local found_table = false                                                                                                                 
    if db then                                                                                                                                
        db:exec([[select * from sqlite_master where name='message';]], function(...) found_table = true end)                                   
        if found_table then
            for row in db:rows("select topic, payload, timestamp from message order by timestamp desc") do                                           
                table.insert(messages, {topic = row[1], payload = row[2], timestamp = row[3]})              
            end                                                                                                                               
        end                                                                                                                                   
        db:close()                                                                                                                            
    end
	return messages
end

-%>
<script src="<%=resource%>/vanilla-dataTables.js?v=210212.55229"></script>
<style>
    .dataTable-table {
        table-layout: fixed;
    }
</style>
<% if self.title and #self.title > 0 then -%>
	<h3 class="content-title <%=(self.description) and ' note-after hoverable' or ' '%>" onclick="toggleContent(this, 'status.eventlog.toggle')">
		<div class="toggle-arrow expanded"><img src="<%=media%>/img/icons/arrow-toggle.svg"></div>
		<span><%=self.title%>
			<% if self.description and #self.description > 0 then %>
				<div class="label-info"><%=self.description%></div>
			<% end %>
			</span>
	</h3>
<%- end %>
<div id="status.eventlog.toggle" class="toggle-content">
<div class="table-wrapper">
	<table id="table" style="width: 100%;">
		<colgroup>
			<col span="1" style="width: 20%;">
			<col span="1" style="width: 40%;">
			<col span="1" style="width: 40%;">
		 </colgroup>
		<% if has_titles then %>
			<thead>
			<tr>
				<% local i, k
				   titles = {}

				for i, k in ipairs(self.children) do colspan = colspan + 1
					if not k.optional then
						table.insert(titles, k.title) %>
						<th style="text-align:center"><%=k.title%></th>
					<%end
				end %>
				<% if self.addremove then -%>
					<th><input type="checkbox" id="select-all"></th>
				<%-end-%>
			</tr>
			</thead>
		<% end %>
		<tbody>
			<%-
			local isempty = true, i, k
			local events = get_events()

			if events and #events > 0 then
				for i, k in ipairs(events) do
					isempty = false

					local scope = {
						valueheader = "cbi/cell_valueheader",
						valuefooter = "cbi/cell_valuefooter"
					}
				-%>
					<tr class="cbi-section-table-row">
						<td class="input-cell" id="cbi-table-<%=i%>-timestamp" style="text-align:center"><div class="div-heading"><%=titles[1]%></div><%=k.timestamp%></td>
						<td class="input-cell" id="cbi-table-<%=i%>-topic" style="text-align:center"><div class="div-heading"><%=titles[2]%></div><%=k.topic%></td>
						<td class="input-cell left-aligned" id="cbi-table-<%=i%>-payload" style="text-align:center"><div class="div-heading"><%=titles[3]%></div><%=k.payload%></td>
					</tr>
				<%- end -%>
			<%- end -%>
			<%- if isempty then -%>
			<tr>
				<td class="left-aligned" <%=ifattr(colspan > 1, "colspan", colspan)%>><em><%:This section contains no values yet%></em></td>
			</tr>
			<%- end -%>
		</tbody>
	</table>
</div>
<div class="btn-group right-align">
	<%- if self.refresh then -%>
	<button class="btn medium-btn" onclick="location.reload();">refresh</button>
	<%- end; if self.addremove then -%>
	<button class="btn medium-btn" name="cbi.rts.<%=self.config%>.__delete__" alt="<%:Delete%>">delete</button>
	<%- end -%>
</div>
</div>
<script>
	function AddWindowOnLoadEvent(Func) {
		var objOnLoadOld = window.onload;

		if (typeof window.onload != 'function') {
			window.onload = Func;
		} else {
			window.onload = function() {
				if (objOnLoadOld) {
					objOnLoadOld();
				}
				Func();
			}
		}
	}

	var config = <%generate_config(self.table_config)%>;
    var table = new DataTable("#table", config);

    <%- if self.addremove then -%>
    document.querySelector("#select-all").addEventListener("click", function(ev) {
        var checked = this.checked;
        document.getElementsByName('cbid.<%=self.config%>.__selected__').forEach(function(e) {
            e.checked = checked;
        });
    });
	<%- end -%>

    var headers = document.getElementsByClassName('dataTable-table')[0].getElementsByTagName('th');
    headers[0].style.width = '';
    headers[1].style.width = '';
    headers[2].style.width = '70%';
	headers[3].style.width = '0%';
	
	checkToggled(document.getElementById("status.eventlog.toggle"),"status.eventlog.toggle")
</script>
<!-- /tblsection -->
